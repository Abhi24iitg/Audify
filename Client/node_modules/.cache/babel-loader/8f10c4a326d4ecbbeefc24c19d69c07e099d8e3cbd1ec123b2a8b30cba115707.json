{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\audifyabhishek\\\\audify\\\\src\\\\Audify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Audify() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('video', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5000/convert', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const downloadUrl = URL.createObjectURL(blob);\n\n        // Create a link element and click it to initiate the file download\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.download = 'output.mp3';\n        link.click();\n      } else {\n        console.error('Conversion failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Conversion failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video to Audio Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Audify, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Audify;\nexport default Audify;\nvar _c;\n$RefreshReg$(_c, \"Audify\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Audify","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","blob","downloadUrl","URL","createObjectURL","link","document","createElement","href","download","click","console","error","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/audifyabhishek/audify/src/Audify.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Audify() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('video', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/convert', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const downloadUrl = URL.createObjectURL(blob);\r\n\r\n        // Create a link element and click it to initiate the file download\r\n        const link = document.createElement('a');\r\n        link.href = downloadUrl;\r\n        link.download = 'output.mp3';\r\n        link.click();\r\n      } else {\r\n        console.error('Conversion failed:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Conversion failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Video to Audio Converter</h1>\r\n      <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={!selectedFile}>\r\n        Convert\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Audify;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,YAAY,CAAC;IAEtC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,WAAW,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;;QAE7C;QACA,MAAMI,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGN,WAAW;QACvBG,IAAI,CAACI,QAAQ,GAAG,YAAY;QAC5BJ,IAAI,CAACK,KAAK,CAAC,CAAC;MACd,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEhB,QAAQ,CAACiB,UAAU,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhC,OAAA;MAAAgC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpC,OAAA;MAAOqC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAElC;IAAiB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEpC,OAAA;MAAQwC,OAAO,EAAE/B,YAAa;MAACgC,QAAQ,EAAE,CAACtC,YAAa;MAAA6B,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClC,EAAA,CA3CQD,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}