{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\audifyabhishek\\\\audify\\\\src\\\\Audiofiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Audios() {\n  _s();\n  const [audioFiles, setAudioFiles] = useState([]);\n  useEffect(() => {\n    fetchAudioFiles();\n  }, []);\n  const email = JSON.parse(localStorage.getItem('useraudify')).email;\n  const fetchAudioFiles = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/audify?email=${email}');\n      if (response.ok) {\n        const data = await response.json();\n        setAudioFiles(data.audios[0].audioArray);\n      } else {\n        console.error('Failed to fetch audio files:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to fetch audio files:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), audioFiles.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: audio.filename\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:5000/audify/${audio._id}`,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, audio._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Audios, \"3g/no86fpXfgub4JPNiIy/EUcGk=\");\n_c = Audios;\nexport default Audios;\nvar _c;\n$RefreshReg$(_c, \"Audios\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Audios","_s","audioFiles","setAudioFiles","fetchAudioFiles","email","JSON","parse","localStorage","getItem","response","fetch","ok","data","json","audios","audioArray","console","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","map","audio","filename","controls","src","_id","type","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/audifyabhishek/audify/src/Audiofiles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Audios() {\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAudioFiles();\r\n  }, []);\r\n  const email=JSON.parse(localStorage.getItem('useraudify')).email;\r\n  const fetchAudioFiles = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/audify?email=${email}');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAudioFiles(data.audios[0].audioArray);\r\n      } else {\r\n        console.error('Failed to fetch audio files:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch audio files:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Audio Files</h1>\r\n      {audioFiles.map((audio) => (\r\n        <div key={audio._id}>\r\n          <h2>{audio.filename}</h2>\r\n          <audio controls>\r\n            <source src={`http://localhost:5000/audify/${audio._id}`} type=\"audio/mpeg\" />\r\n          </audio>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Audios;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdO,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,KAAK,GAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAACJ,KAAK;EAChE,MAAMD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;MAC3E,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCX,aAAa,CAACU,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC;MAC1C,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAER,QAAQ,CAACS,UAAU,CAAC;MACpE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBtB,UAAU,CAACuB,GAAG,CAAEC,KAAK,iBACpB3B,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKM,KAAK,CAACC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBzB,OAAA;QAAO6B,QAAQ;QAAAR,QAAA,eACbrB,OAAA;UAAQ8B,GAAG,EAAG,gCAA+BH,KAAK,CAACI,GAAI,EAAE;UAACC,IAAI,EAAC;QAAY;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA,GAJAE,KAAK,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKd,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAlCQD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAoCf,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}